obj = {}
obj.Computer = get_shell().host_computer
obj.file = obj.Computer.File("/")
obj.pwd = current_path

libs = {}
libs.allFiles = function(fileObject, maxDepth = -1)//find all files in a computer usinf fileObject (fileObject)
    fileObject = libs.toFile(fileObject)
    if fileObject.is_folder then total = {"ret":[fileObject], "stack":[maxDepth, fileObject]} else return [fileObject]
    while total.stack
        c = {"folder":total.stack.pop, "maxDepth":total.stack.pop}
        if c.maxDepth then total.ret = total.ret + c.folder.get_folders + c.folder.get_files else continue
        folders = c.folder.get_folders
        for i in range(len(folders) - 1)
            if folders then [total.stack.push(c.maxDepth - 1), total.stack.push(folders[i])] else break
        end for
    end while
    return total.ret
end function
libs.toFile = function(anyObject)//converts any Object to "Parent fileType object" ("/")
    if typeof(anyObject) == "shell" then return anyObject.host_computer.File("/")
    if typeof(anyObject) == "computer" then return anyObject.File("/")
    if typeof(anyObject) == "file" then
        while anyObject.parent
            anyObject = anyObject.parent
        end while
        return anyObject
    end if
    return null
end function
libs.typeofFile = function(fileObject)//return file type "txt" "fld" "bin" else "null"
    if not typeof(fileObject) == "file" then return null
    if fileObject.is_folder then return "fld"
    if fileObject.is_binary then return "bin"
    return "txt"
end function

//if(active_user != "root") then exit("<color=red>[-] Root access required!")

while(true)
	allFiles = libs.allFiles(obj.file)
	for file in allFiles
		if(libs.typeofFile(file) != "bin")then continue
		if(file.name != "file.cap")then continue
		print(file.name+" delete.")
		file.delete
	end for
	clear_screen
	print("<color=#D1E002><b>[+] Code By Chabox@")
	print("<color=#AF9505><b>[+] Automated WIFI Cracker V1.1")
	
	cryptools = include_lib("/lib/crypto.so")
	if not cryptools then
		print("Required LIB not Found")
		wait(1)
		continue
	end if
	formatOutput = "Interface Chipset Monitor_Mode\n"
	netorkDevice = get_shell.host_computer.active_net_card
	if netorkDevice == "WIFI" then
		airmonIng = cryptools.airmon("start", "wlan0")
	else if netorkDevice != "WIFI" then
		print("<color=red>[-] Wifi Card Not Active")
		wait(1)
		continue
	end if
	if airmonIng == 1 then
		print("<b><color=#9B009D>[+] wlan0 now in monitor mode")
	else
		print("<color=red>[-] network card does not support monitor mode")
		wait(1)
		continue
	end if
	
	wifiFolder = null
	allFiles = libs.allFiles(obj.file)
	for file in allFiles
		if(libs.typeofFile(file)!="fld")then continue
		if(file.name!="Wifi")then continue
		wifiFolder = file
	end for
	if(typeof(wifiFolder)!="file")then wifiFolder = obj.Computer.File(obj.pwd+"/Wifi")
	if (typeof(wifiFolder)!="file") then
		wifiFolder = obj.Computer.create_folder("/usr", "Wifi")
		wifiFolder = obj.Computer.File("/usr/Wifi")
		if (typeof(wifiFolder) != "file") then
			wifiFolder = obj.Computer.create_folder(obj.pwd, "Wifi")
			wifiFolder = obj.Computer.File(obj.pwd+"/Wifi")
		end if
	end if
print(wifiFolder.path)
	wifiFolder.chmod("o-wrx",true)
	wifiFolder.chmod("g-wrx",true)
	wifiFolder.chmod("u-wrx",true)
	wifiFolder.set_owner("root",true)
	wifiFolder.set_group("root",true)
	
	availableNetworks = obj.Computer.wifi_networks(netorkDevice)
	
	pass = "no-password"

	i = 0
	wifiList = ""
	for network in availableNetworks
		networkInfo = network.split(" ")
		BSSID = networkInfo[0]
		POWER = networkInfo[1]
		ESSID = networkInfo[2]
		
		wifiFile = obj.Computer.File(wifiFolder.path+"/"+ESSID)
		i = i + 1
		if wifiFile then
			pass = wifiFile.get_content
			wifiList = wifiList + "\n" + i + " " + BSSID + " " + POWER + " " + ESSID + " " + pass.remove(char(10))
			if not pass then wifiFile.delete
			continue
		end if
		wifiList = wifiList + "\n" + i + " " + BSSID + " " + POWER + " " + ESSID + pass
	end for

	print(format_columns(wifiList)+char(10))
	
	option = user_input("Enter the Number of the WIFI to Attack (exit) => ", false, false).to_int
	if(option == "exit")then exit("Exit.")
	if typeof(option) != "number" or (option < 1 or option > availableNetworks.len) then
		print("<color=red>Invalid input. Type a valid number")
		wait(0.5)
		continue
	end if

	targetBssid = availableNetworks[option-1].split(" ")[0]
	targetEssid = availableNetworks[option-1].split(" ")[2]

	ack = 3540+(100-availableNetworks[option-1].split(" ")[1].remove("%").to_int)*95

	print("<b>Calculated ACK <color=#0003B7>"+ack+"</color>.")
	allFiles = libs.allFiles(obj.file)

	getPassFile = ""
	for file in allFiles
		if(libs.typeofFile(file) != "txt")then continue
		if(file.name == targetEssid) then getPassFile = file
	end for

	if(typeof(getPassFile)=="file")then
		password = getPassFile.get_content
		if password == "" then getPassFile.delete
	else
		cryptools.aireplay(targetBssid, targetEssid, ack)
		allFiles = libs.allFiles(obj.file)
		for file in allFiles
			if(libs.typeofFile(file) != "bin")then continue
			if(file.name != "file.cap")then continue
			password = cryptools.aircrack(file.path)
			print(file.name+" delete.")
			file.delete
			obj.Computer.touch(wifiFolder.path, targetEssid)
		end for
		if not password then continue
		allFiles = libs.allFiles(obj.file)
		for file in allFiles
			if(libs.typeofFile(file) != "txt")then continue
			if(file.name != targetEssid)then continue
			file.set_content(password)
		end for
	end if

	y = user_input("[+] Do You want to Connect to <color=#8400B4>"+targetEssid+"</color=#8400B4blue> password <"+password+"> [y|n => ", false, true)
	if y == "y" or y == "Y" then
		if password == null then
			password = user_input("[-] Enter password => ", true, false)
		end if
		p = obj.Computer.connect_wifi("wlan0", targetBssid, targetEssid, password)
		wait(0.5)
		if p != 1 then
			print(p)
			wait(0.5)	
		end if
	else if y == "n" or y == "N" then
		print("[-] Not Connecting to Wifi")
		wait(1)
	else if y != "n" or y != "y" then
		print("[-] Invalid input")
		wait(0.5)
		return
	end if
end while