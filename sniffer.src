if((params.indexOf("-h") != null) or (params.indexOf("--help") != null)) then exit(command_info("sniffer_usage"))

iter_ = function()
	while(true)
		if not computerObject.is_network_active then
		print("<b>[!] No internet\n<b><<<=== GET INTERNET ACCESS ===>>>")
		wait(2)
		continue
		else
			break
		end if
	end while
end function

file_ = function(output)
	password = "Error-Somthing-Wrong"
	name1 = output.split("\n")
	part1 = name1[5].split(" ")
	part2 = name1[6].split(" ")
	file = computerObject.File(current_path+"/encode.src")
	if(typeof(file)=="file")then
		editBeforeMove = "//Creds {"+char(10)+"//"+name1[2]+char(10)+"//"+name1[3]+char(10)+"//"+name1[4]+char(10)+"//"+name1[5]+char(10)+"//"+name1[6]+char(10)+"//}"+char(10)+char(10)+"//[sniffed-code start]"+char(10)+file.get_content+char(10)+"//[sniffed-code end]"
		encodeFunction = file.get_content.replace("if type == ""enc"" then return", "//").replace("dec", "enc")+ char(10) + "get_custom_object.password = Encode(params[0])"
		file.set_content(editBeforeMove)
		file.move(current_path+"/Sniffed", name1[3].split(" ")[1]+"_"+name1[4].split(" ")[1]+"_"+part1[1]+"_"+part2[1]+".src")
		computerObject.touch(current_path, part1[1]+"_"+part2[1]+".src")
		decodeFile = computerObject.File(current_path+"/"+part1[1]+"_"+part2[1]+".src")
		if(typeof(decodeFile) == "file")then
			decodeFile.set_content(encodeFunction)
			shellObject.build(decodeFile.path, current_path)
			decodeFile.delete
			shellObject.launch(current_path+"/"+part1[1]+"_"+part2[1], part2[1])
			password = get_custom_object.password
		end if
		decodeFile = computerObject.File(current_path+"/"+part1[1]+"_"+part2[1])
		if(typeof(decodeFile) == "file")then decodeFile.delete
	end if
	print("[+] DECODED PASS : [ "+password+" ]")
end function

clear_screen

getMetaxploit = "
metaxploit = include_lib(""/lib/metaxploit.so"")
if(not metaxploit)then
    metaxploit = include_lib(current_path+""/metaxploit.so"")
end if

if(metaxploit)then
	get_custom_object.metaxploit = metaxploit
else
	get_custom_object.metaxploit = ""error""
end if

"

pass = "null"

if(params.indexOf("-p") != null)then
	if([params.len] != [params.indexOf("-p")+1])then
		pass = params[params.indexOf("-p") + 1]
	else
		print("<color=#FBCD00>Invalid ""-p"" option [root_password] needed")
	end if
end if

shellObject = get_shell("root", pass)

if(typeof(shellObject) == "shell")then
	computerObject = shellObject.host_computer
else
	shellObject = get_shell()
	computerObject = shellObject.host_computer
	print("<color=#FF7B00>Using Custom Shell.")
	if(pass != "null")then
		print("<color=#FF7B00>Invalid (root_password)")
	else
		print("<color=#FF7B00>Use ""-p (root_password)"" option")
	end if
end if

print("<b>Make sure that you are running the program in the same directory as you are in and you have ""w"" permissions to that folder and metaxploit.so in ""/lib/metaxploit.so"" or current_path for this to work </b>")

computerObject.touch(current_path, "metaxploit.src")
metaSourceFile = computerObject.File(current_path+"/metaxploit.src")
if(typeof(metaSourceFile) == "file")then
	metaSourceFile.set_content(getMetaxploit)
	shellObject.build(metaSourceFile.path, current_path)
	metaSourceFile.delete
	metaExecutable = computerObject.File(current_path+"/metaxploit")
	if(typeof(metaExecutable) == "file")then
		shellObject.launch(metaExecutable.path)
		metaExecutable.delete
	else
		exit(char(10)+"Can't find binary file")
	end if
else
	exit(char(10)+"Permission Denied.")
end if

metaxploit = get_custom_object.metaxploit

if(metaxploit == "error")then exit(char(10)+"Failed to get metaxploit.so")

while(true)
	iter_()
	print("<b><color=blue>#########################################")
	output = metaxploit.sniffer(true)
	if not output then
		print("Unknown error: can't start to listening")
		wait(0.9)
		return
	end if
	print(output)
	name1 = output.split("\n")
	if name1[6].indexOf(" ") > 16 then
		folder = computerObject.File(current_path+"/Sniffed")
		if(typeof(folder) == "file")then
			file_(output)
		else
			computerObject.create_folder(current_path, "Sniffed")
			file_(output)
		end if
	end if
end while